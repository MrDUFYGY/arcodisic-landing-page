---
// P√°gina principal del CMS - DecapCMS
// Esta es la p√°gina real donde se carga el editor de contenido
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex" />
    <title>Arcodisic - Editor CMS</title>

    <style>
      :root {
        color-scheme: dark;
      }
      
      /* Modo oscuro para DecapCMS */
      body {
        background: #0f172a !important;
        color: #f1f5f9 !important;
      }
      
      /* Personalizar interfaz del CMS */
      .nc-app-header {
        background: #1e293b !important;
        border-bottom: 1px solid #334155 !important;
      }
      
      .nc-app-sidebar {
        background: #1e293b !important;
        border-right: 1px solid #334155 !important;
      }
      
      .nc-workflowList {
        background: #0f172a !important;
      }
      
      .nc-entryListing-card {
        background: #1e293b !important;
        border: 1px solid #334155 !important;
      }
      
      .nc-entryListing-card:hover {
        background: #334155 !important;
      }
      
      /* Alerta de errores */
      .identity-alert {
        position: fixed;
        top: 16px;
        right: 16px;
        padding: 16px 20px;
        border-radius: 12px;
        background: rgba(220, 38, 38, 0.95);
        color: white;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        box-shadow: 0 20px 45px rgba(220, 38, 38, 0.3);
        max-width: 320px;
        display: none;
        z-index: 9999;
      }
      
      .identity-alert.show {
        display: block;
      }
      
      .identity-alert strong {
        display: block;
        font-size: 16px;
        margin-bottom: 6px;
      }
      
      .identity-alert button {
        margin-top: 12px;
        border: none;
        background: rgba(255, 255, 255, 0.25);
        color: white;
        padding: 6px 10px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 12px;
      }
      
      .identity-alert button:hover {
        background: rgba(255, 255, 255, 0.35);
      }
    </style>
    
    <!-- Netlify Identity Widget: Solo en producci√≥n -->
    <script is:inline>
      (function() {
        // Detectar si estamos en producci√≥n
        var isProduction = window.location.hostname !== 'localhost' && 
                          window.location.hostname !== '127.0.0.1';
        
        if (!isProduction) {
          console.log('üîß Modo LOCAL: Netlify Identity deshabilitado');
          console.log('üìù Aseg√∫rate de ejecutar: npm run cms:local');
          return;
        }

        console.log('üåê Modo PRODUCCI√ìN: Cargando Netlify Identity...');

        // Funci√≥n para mostrar alertas
        function showAlert(message) {
          var alertEl = document.querySelector('.identity-alert');
          if (!alertEl) return;

          alertEl.querySelector('span').textContent = message;
          alertEl.classList.add('show');

          var closeBtn = alertEl.querySelector('button');
          if (closeBtn) {
            closeBtn.onclick = function() {
              alertEl.classList.remove('show');
            };
          }
        }
        
        // Funci√≥n para inicializar Netlify Identity
        function initNetlifyIdentity() {
          var identity = window.netlifyIdentity;
          
          if (!identity) {
            console.error('‚ùå Netlify Identity no est√° disponible');
            showAlert('No pudimos cargar Netlify Identity. Revisa tu conexi√≥n.');
            return;
          }

          console.log('‚úÖ Netlify Identity cargado');

          // Evento: Usuario inicializado
          identity.on('init', function(user) {
            console.log('üîÑ Identity init:', user ? '‚úÖ Usuario autenticado' : '‚ùå Sin usuario');
            
            if (!user) {
              // Si no hay usuario, abrir modal de login
              console.log('üîì Abriendo modal de login...');
              identity.open('login');
            } else {
              console.log('üë§ Usuario:', user.email);
              // Inicializar DecapCMS despu√©s del login
              initDecapCMS();
            }
          });

          // Evento: Usuario hizo login
          identity.on('login', function(user) {
            console.log('‚úÖ Login exitoso:', user.email);
            // Cerrar modal y recargar para inicializar CMS
            identity.close();
            setTimeout(function() {
              window.location.reload();
            }, 500);
          });

          // Evento: Usuario hizo logout
          identity.on('logout', function() {
            console.log('üëã Logout - Redirigiendo...');
            window.location.href = '/admin';
          });

          // Evento: Error
          identity.on('error', function(err) {
            console.error('‚ùå Identity Error:', err);
            showAlert(err && err.message ? err.message : 'Ocurri√≥ un error con Netlify Identity.');
          });
        }

        // Cargar el script de Netlify Identity si estamos en producci√≥n
        if (isProduction) {
          if (window.netlifyIdentity) {
            // Ya est√° cargado (posiblemente desde otro script)
            initNetlifyIdentity();
          } else {
            // Cargar din√°micamente
            var script = document.createElement('script');
            script.src = 'https://identity.netlify.com/v1/netlify-identity-widget.js';
            script.async = true;
            script.onload = function() {
              console.log('üì¶ Script de Netlify Identity cargado');
              initNetlifyIdentity();
            };
            script.onerror = function() {
              console.error('‚ùå Error al cargar Netlify Identity');
              showAlert('No se pudo cargar Netlify Identity. Intenta refrescar la p√°gina.');
            };
            document.head.appendChild(script);
          }
        }
      })();
    </script>
  </head>
  <body>
    <div class="identity-alert" role="alert" aria-live="assertive">
      <strong>‚ö†Ô∏è Error de autenticaci√≥n</strong>
      <span></span>
      <button type="button">Cerrar</button>
    </div>

    <!-- DecapCMS: Editor de contenido -->
    <script src="https://unpkg.com/decap-cms@^3.1.2/dist/decap-cms.js"></script>
    
    <script is:inline>
      function initDecapCMS() {
        if (!window.CMS) {
          console.error('DecapCMS no est√° disponible.');
          return;
        }
        
        console.log('üìù DecapCMS inicializando...');
        console.log('üìÇ Configuraci√≥n: /admin/config.yml');
        
        CMS.init();
        
        // Personalizar interfaz
        setTimeout(function() {
          // Cambiar logo
          var logo = document.querySelector('.nc-githubAuthenticationPage-logo img, .nc-app-header img');
          if (logo) {
            logo.src = '/favicon.svg';
            logo.alt = 'Arcodisic';
            logo.style.maxWidth = '180px';
          }
          
          // Cambiar t√≠tulos
          var title = document.querySelector('.nc-githubAuthenticationPage h1');
          if (title) {
            title.textContent = 'Arcodisic CMS';
          }
          
          var subtitle = document.querySelector('.nc-githubAuthenticationPage h2');
          if (subtitle) {
            subtitle.textContent = 'Inicia sesi√≥n para administrar el contenido';
          }
        }, 1000);
      }
      
      // Inicializar CMS solo en local o si ya hay usuario autenticado
      var isProduction = window.location.hostname !== 'localhost' && 
                        window.location.hostname !== '127.0.0.1';
      
      if (!isProduction) {
        // En local, inicializar inmediatamente
        initDecapCMS();
      } else {
        // En producci√≥n, esperar a que Identity est√© listo
        var checkUser = setInterval(function() {
          if (window.netlifyIdentity && window.netlifyIdentity.currentUser()) {
            clearInterval(checkUser);
            initDecapCMS();
          }
        }, 500);
        
        // Timeout de 10 segundos
        setTimeout(function() {
          clearInterval(checkUser);
        }, 10000);
      }
    </script>
  </body>
</html>
