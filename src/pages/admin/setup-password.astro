---
// P√°gina para establecer contrase√±a desde tokens de invitaci√≥n/recuperaci√≥n
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="robots" content="noindex">
  <title>Establecer Contrase√±a - Arcodisic CMS</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    .container {
      background: white;
      border-radius: 16px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      padding: 48px;
      max-width: 450px;
      width: 100%;
    }

    .logo {
      text-align: center;
      margin-bottom: 32px;
    }

    .logo h1 {
      color: #333;
      font-size: 28px;
      font-weight: 700;
      margin-bottom: 8px;
    }

    .logo p {
      color: #666;
      font-size: 14px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      color: #333;
      font-size: 14px;
      font-weight: 500;
    }

    input {
      width: 100%;
      padding: 12px;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.3s ease;
    }

    input:focus {
      outline: none;
      border-color: #667eea;
    }

    button {
      width: 100%;
      padding: 14px;
      background: #667eea;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    button:hover {
      background: #5568d3;
      transform: translateY(-2px);
    }

    button:disabled {
      background: #ccc;
      cursor: not-allowed;
      transform: none;
    }

    .message {
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
      display: none;
    }

    .message.show {
      display: block;
    }

    .message.error {
      background: #fee;
      color: #c33;
    }

    .message.success {
      background: #efe;
      color: #3c3;
    }

    .message.info {
      background: #eef;
      color: #33c;
    }

    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      animation: spin 1s linear infinite;
      margin: 0 auto;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .loading {
      display: none;
      text-align: center;
      padding: 20px;
    }

    .loading.show {
      display: block;
    }

    .password-requirements {
      font-size: 12px;
      color: #666;
      margin-top: 8px;
      padding-left: 4px;
    }

    .password-requirements li {
      margin-bottom: 4px;
    }
  </style>
  




  
  <!-- Netlify Identity Widget -->
  <script is:inline>
    // Cargar Netlify Identity din√°micamente
    (function() {
      var isProduction = window.location.hostname !== 'localhost' && 
                        window.location.hostname !== '127.0.0.1';
      
      if (isProduction) {
        var script = document.createElement('script');
        script.src = 'https://identity.netlify.com/v1/netlify-identity-widget.js';
        script.async = false; // Cargar s√≠ncronamente para que est√© disponible
        document.head.appendChild(script);
      }
    })();
  </script>
</head>
<body>
  <div class="container">
    <div class="logo">
      <h1>üîê Establecer Contrase√±a</h1>
      <p>Configura tu contrase√±a para acceder al CMS</p>
    </div>

    <div id="message" class="message"></div>

    <div id="loading" class="loading">
      <div class="spinner"></div>
      <p style="margin-top: 12px; color: #666;">Procesando...</p>
    </div>

    <form id="passwordForm" style="display: none;">
      <div class="form-group">
        <label for="password">Nueva Contrase√±a</label>
        <input
          type="password"
          id="password"
          name="password"
          required
          minlength="6"
          placeholder="M√≠nimo 6 caracteres"
        />
        <ul class="password-requirements">
          <li>M√≠nimo 6 caracteres</li>
          <li>Se recomienda usar may√∫sculas, min√∫sculas y n√∫meros</li>
        </ul>
      </div>

      <div class="form-group">
        <label for="confirmPassword">Confirmar Contrase√±a</label>
        <input
          type="password"
          id="confirmPassword"
          name="confirmPassword"
          required
          minlength="6"
          placeholder="Repite la contrase√±a"
        />
      </div>

      <button type="submit" id="submitBtn">
        Establecer Contrase√±a
      </button>
    </form>

    <div id="successMessage" style="display: none; text-align: center;">
      <div style="font-size: 48px; margin-bottom: 16px;">‚úÖ</div>
      <h2 style="color: #333; margin-bottom: 12px;">¬°Contrase√±a Establecida!</h2>
      <p style="color: #666; margin-bottom: 24px;">Redirigiendo al CMS...</p>
    </div>
  </div>

  <script>
    const form = document.getElementById('passwordForm') as HTMLFormElement;
    const loading = document.getElementById('loading') as HTMLDivElement;
    const message = document.getElementById('message') as HTMLDivElement;
    const successMessage = document.getElementById('successMessage') as HTMLDivElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const passwordInput = document.getElementById('password') as HTMLInputElement;
    const confirmPasswordInput = document.getElementById('confirmPassword') as HTMLInputElement;

    // Detectar si estamos en localhost o producci√≥n
    const isLocalhost = window.location.hostname === 'localhost' || 
                       window.location.hostname === '127.0.0.1';

    function showMessage(text: string, type: 'error' | 'success' | 'info') {
      if (message) {
        message.textContent = text;
        message.className = `message ${type} show`;
      }
    }

    function hideMessage() {
      if (message) {
        message.className = 'message';
      }
    }

    async function handlePasswordSetup() {
      // Obtener token de la URL
      const hashParams = new URLSearchParams(window.location.hash.substring(1));
      const recoveryToken = hashParams.get('recovery_token');
      const inviteToken = hashParams.get('invite_token');
      const confirmationToken = hashParams.get('confirmation_token');
      const token = recoveryToken || inviteToken || confirmationToken;

      if (!token) {
        showMessage('No se encontr√≥ un token v√°lido en la URL. Por favor, usa el enlace del correo.', 'error');
        setTimeout(() => {
          window.location.href = '/admin/cms';
        }, 3000);
        return;
      }

      if (isLocalhost) {
        // En desarrollo local, simular el proceso
        showMessage('Modo desarrollo: En producci√≥n, aqu√≠ establecer√≠as tu contrase√±a con Netlify Identity.', 'info');
        if (form) form.style.display = 'block';
        if (loading) loading.classList.remove('show');

        form?.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const password = passwordInput.value;
          const confirmPassword = confirmPasswordInput.value;

          if (password !== confirmPassword) {
            showMessage('Las contrase√±as no coinciden', 'error');
            return;
          }

          if (password.length < 6) {
            showMessage('La contrase√±a debe tener al menos 6 caracteres', 'error');
            return;
          }

          // En local, solo simular
          hideMessage();
          if (form) form.style.display = 'none';
          if (successMessage) successMessage.style.display = 'block';
          
          console.log('‚úÖ [LOCAL] Contrase√±a simulada:', password);
          
          setTimeout(() => {
            window.location.href = '/admin/cms';
          }, 2000);
        });

      } else {
        // En producci√≥n, esperar a que Netlify Identity se cargue
        var checkIdentityInterval = setInterval(function() {
          var identity = (window as any).netlifyIdentity;
          
          if (identity) {
            clearInterval(checkIdentityInterval);
            console.log('‚úÖ Netlify Identity cargado');
            
            // Ocultar loading
            if (loading) loading.classList.remove('show');
            
            // Configurar eventos
            identity.on('init', function(user: any) {
              console.log('üîÑ Identity init:', user);
              
              if (!user) {
                // Abrir modal autom√°ticamente
                console.log('üîì Abriendo modal...');
                identity.open();
              }
            });
            
            identity.on('login', function(user: any) {
              console.log('‚úÖ Login exitoso:', user.email);
              showMessage('¬°Contrase√±a establecida con √©xito!', 'success');
              setTimeout(function() {
                window.location.href = '/admin/cms';
              }, 1500);
            });
            
            identity.on('signup', function(user: any) {
              console.log('‚úÖ Signup exitoso:', user.email);
              showMessage('¬°Cuenta creada con √©xito!', 'success');
              setTimeout(function() {
                window.location.href = '/admin/cms';
              }, 1500);
            });
            
            identity.on('error', function(err: any) {
              console.error('‚ùå Error:', err);
              showMessage('Error: ' + err.message, 'error');
            });
          }
        }, 100);
        
        // Timeout de 10 segundos
        setTimeout(function() {
          clearInterval(checkIdentityInterval);
          if (!(window as any).netlifyIdentity) {
            showMessage('Error: Netlify Identity no se pudo cargar. Verifica tu conexi√≥n.', 'error');
            if (loading) loading.classList.remove('show');
          }
        }, 10000);
      }
    }

    // Ejecutar cuando cargue la p√°gina
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', handlePasswordSetup);
    } else {
      handlePasswordSetup();
    }
  </script>
</body>
</html>
